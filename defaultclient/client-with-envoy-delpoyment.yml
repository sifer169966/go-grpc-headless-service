apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-grpc-defaultclient-with-envoy
  labels:
    app.kubernetes.io/name: go-grpc-defaultclient-with-envoy
    name: go-grpc-defaultclient-with-envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: go-grpc-defaultclient-with-envoy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: go-grpc-defaultclient-with-envoy
    spec:
      restartPolicy: Always
      containers:
      - name: go-grpc-defaultclient
        image: ${ARTIFACT_REGION}-docker.pkg.dev/${ARTIFACT_PROJECT_ID}/go-grpc-defaultclient/dev:latest
        imagePullPolicy: Always
        ports:
          - name: tcp
            containerPort: 8080
      - name: envoy-proxy
        image: ${ARTIFACT_REGION}-docker.pkg.dev/${ARTIFACT_PROJECT_ID}/grpc-envoystatic/dev:latest
        restartPolicy: Never
        env:
          - name: APP_REST_PORT
            value: "8080"
          - name: GRPC_CLIENT_SERVER_HOST
            value: "go-grpc-headless-service-server.demo-headless.svc.cluster.local"
          - name: GRPC_CLIENT_SERVER_PORT
            value: "8080"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10


---

apiVersion: v1
kind: Service
metadata:
  name: go-grpc-defaultclient-with-envoy
  labels:
    app.kubernetes.io/name: go-grpc-defaultclient-with-envoy
spec:
  selector:
    app.kubernetes.io/name: go-grpc-defaultclient-with-envoy
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  type: ClusterIP